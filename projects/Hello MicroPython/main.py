# uPyGame performance test
# Copyright (C) 2019 Hannu Viitala
#
# The source code in this file is released under the MIT license.
# Go to http://opensource.org/licenses/MIT for the full license details.
#
# The graphics in this file are released under the Creative Commons Attribution license (CC-BY).
# Go to https://creativecommons.org/licenses/by/4.0/ for the full license details.

# 1) Drawing a surface of 16x16 pixels 100 times a frame gives 16 Fps (full speed). 4-bit colors for both screen and the surface.
# 2) Drawing a surface of 16x16 pixels 200 times a frame gives 12 Fps (full speed). 4-bit colors for both screen and the surface.

import upygame as upg
import urandom as random

upg.display.init()
screen_sf = upg.display.set_mode() # full screen

# Set palette
# upg.display.set_palette_16bit([0,4124,1984,65535]);
upg.display.set_palette_16bit([
	4195,16678,12717,19017,13092,33382,53801,29580,23545,54245,33972,27973,28185,54611,57003,57210
]);

# map, 16x16
mapPixels1 = b'\
\x88\x88\x88\x88\x88\x88\x88\x88\
\x88\x88\x88\x88\x88\x88\x88\x88\
\x88\x88\x88\x88\x88\x88\x88\x88\
\x55\x5b\xbb\x88\x88\xbb\xb4\x55\
\x55\x4b\x4b\xb8\x88\xbb\x44\x45\
\x54\x44\xbb\xbb\x88\xbb\xb4\x55\
\x55\x5b\xbb\xbb\xb8\x8b\xb5\x55\
\x55\x4b\xb4\xbb\xbb\x8b\xb5\x55\
\x55\x5b\x45\x4b\xbb\x8b\xb4\x44\
\x55\x4b\xb4\xbb\xbb\x8b\xb4\x54\
\x54\x4b\xbb\xbb\xb8\xbb\xb5\x55\
\x45\x44\xbb\xbb\xbb\xbb\xb4\x54\
\x55\x54\xbb\x44\xbb\xbb\x44\x44\
\x55\x54\x4b\xbb\xbb\xb4\x45\x54\
\x45\x45\x55\x44\x55\x44\x55\x55\
\x44\x55\x55\x45\x55\x54\x55\x55\
'

green16Pixels = b'\
\xbb\xbb\xbb\xbb\xbb\xbb\xbb\xbb\
\xbb\xbb\xbb\xbb\xbb\xbb\xbb\xbb\
\xbb\xbb\xbb\xbb\xbb\xbb\xbb\xbb\
\xbb\xbb\xbb\xbb\xbb\xbb\xbb\xbb\
\xbb\xbb\xbb\xbb\xbb\xbb\xbb\xbb\
\xbb\xbb\xbb\xbb\xbb\xbb\xbb\xbb\
\xbb\xbb\xbb\xbb\xbb\xbb\xbb\xbb\
\xbb\xbb\xbb\xbb\xbb\xbb\xbb\xbb\
\xbb\xbb\xbb\xbb\xbb\xbb\xbb\xbb\
\xbb\xbb\xbb\xbb\xbb\xbb\xbb\xbb\
\xbb\xbb\xbb\xbb\xbb\xbb\xbb\xbb\
\xbb\xbb\xbb\xbb\xbb\xbb\xbb\xbb\
\xbb\xbb\xbb\xbb\xbb\xbb\xbb\xbb\
\xbb\xbb\xbb\xbb\xbb\xbb\xbb\xbb\
\xbb\xbb\xbb\xbb\xbb\xbb\xbb\xbb\
\xbb\xbb\xbb\xbb\xbb\xbb\xbb\xbb\
'
green16 = upg.surface.Surface(16, 16, green16Pixels)
tree16Pixels = b'\
\xbb\xbb\xb4\x44\x44\x4b\xbb\xbb\
\xbb\xb4\x44\x4b\x4b\x44\x4b\xbb\
\xbb\x44\x4b\xbb\xbb\xb4\x44\xbb\
\xbb\x11\x44\xbb\xbb\x44\x41\xbb\
\xb1\x14\x4b\x4b\xb4\xb4\x44\x1b\
\xb1\x41\x44\x4b\x44\x44\x11\x1b\
\xb1\x14\x41\x44\x44\x14\x41\x1b\
\xb4\x11\x14\x41\x44\x41\x41\x4b\
\xb1\x44\x14\x11\x41\x11\x11\x1b\
\xbb\x11\x11\x41\x11\x41\x41\xbb\
\xbb\xb1\x11\x41\x11\x14\x1b\xbb\
\xbb\xb7\x77\x11\x51\x77\x77\xbb\
\xbb\x77\x77\x15\x51\x77\x77\x7b\
\xbb\x77\x71\x55\x51\x17\x77\x7b\
\xbb\xb7\x77\x51\x55\x77\x77\xbb\
\xbb\xbb\x77\x77\x77\x77\xbb\xbb\
'
tree16 = upg.surface.Surface(16, 16, tree16Pixels)

grass16Pixels = b'\
\xbb\xb4\xbb\xb4\x4b\xbb\xbb\xbb\
\x4b\xb4\xbb\xbb\xbb\x4b\xbb\xbb\
\xb4\xb4\xbb\xbb\xbb\xbb\xbb\xbb\
\xbb\xbb\xbb\xbb\xbb\xbb\xbb\xbb\
\xbb\xbb\xbb\xbb\x4b\xbb\xb4\xb4\
\xbb\x4b\xbb\xbb\x4b\x4b\xb4\xbb\
\x4b\x4b\xb4\xbb\x44\x4b\xbb\xbb\
\xb4\x44\x4b\xbb\x44\xbb\xbb\xbb\
\xb4\x4b\x4b\xbb\xbb\xbb\xbb\xbb\
\xbb\xbb\xbb\xbb\xbb\xb4\xbb\xbb\
\xbb\xbb\xbb\xbb\xbb\xb4\xb4\xbb\
\xbb\xb4\xbb\xbb\xb4\xb4\x4b\xbb\
\xbb\xb4\xb4\x4b\xbb\x44\x4b\xbb\
\xbb\xb4\x44\xbb\xbb\xbb\xbb\xbb\
\xbb\x4b\xb4\xbb\xb4\xbb\xbb\xbb\
\xbb\xbb\xbb\xb4\xb4\xb4\xbb\xbb\
'
grass16 = upg.surface.Surface(16, 16, grass16Pixels)


water16Pixels = b'\
\x8c\x88\x88\x8c\x88\x8c\x88\x88\
\xff\xc8\x88\x88\x88\x88\xc8\x8c\
\x88\x88\xcc\x88\x88\x88\x8c\xc8\
\x88\x88\x8f\x88\x88\x88\x8c\x88\
\x88\x88\x8f\x88\x88\x88\xc8\x88\
\x88\x8c\xcc\xc8\x88\x8c\xf8\x88\
\x88\xf8\x88\x88\xcc\x88\xc8\x88\
\x8c\xc8\x88\x88\xc8\x88\x8c\x88\
\x88\x8c\x88\x88\x88\x88\x88\xcc\
\x88\x88\xc8\x8c\x88\x88\x88\xf8\
\x88\x88\xcc\xc8\x88\x88\x88\xc8\
\xc8\x88\x88\xc8\x88\x88\x88\x8c\
\x8c\xc8\x88\x88\xc8\x88\xc8\x88\
\x8c\x88\x88\x88\x8c\xff\x88\x88\
\x88\x88\x88\x88\x88\xc8\x88\x88\
\x8c\x88\x88\x88\xfc\xcc\x88\x88\
'
water16 = upg.surface.Surface(16, 16, water16Pixels)

tilemap = upg.tilemap.Tilemap(16, 16, mapPixels1)
tilemap.set_tile(0xb, 16, 16, green16);
tilemap.set_tile(0x5, 16, 16, tree16);
tilemap.set_tile(0x4, 16, 16, grass16);
tilemap.set_tile(0x8, 16, 16, water16);

# pokitto picture
w2 = 16
h2 = 16
pokittoPixels = b'\
\x00\x03\x33\x33\x33\x33\x33\x00\
\x00\x32\x22\x22\x22\x22\x32\x00\
\x00\x32\x33\x33\x33\x33\x22\x00\
\x00\x32\x31\x11\x11\x11\x22\x00\
\x00\x32\x31\x13\x11\x31\x22\x00\
\x02\x32\x31\x11\x11\x11\x22\x23\
\x03\x32\x31\x13\x33\x11\x22\x30\
\x00\x32\x31\x11\x11\x11\x22\x00\
\x00\x32\x22\x22\x22\x22\x22\x00\
\x00\x32\x23\x22\x22\x23\x32\x00\
\x00\x32\x33\x32\x23\x33\x32\x00\
\x00\x32\x23\x22\x23\x32\x22\x00\
\x00\x32\x22\x23\x32\x22\x22\x00\
\x00\x32\x22\x22\x22\x22\x32\x00\
\x00\x33\x33\x33\x33\x33\x33\x00\
\x00\x32\x00\x00\x00\x00\x32\x00\
'

hero_sf = upg.surface.Surface(w2, h2, pokittoPixels)
#hero_sf.fill(2)

x=20
y=20
vx = 0;
vy = 0;
while True:

    eventtype = upg.event.poll()
    if eventtype != upg.NOEVENT:
        if eventtype.type== upg.KEYDOWN:
            if eventtype.key == upg.K_RIGHT:
                vx = 1
            if eventtype.key == upg.K_LEFT:
                vx = -1
            if eventtype.key == upg.K_UP:
                vy = -1
            if eventtype.key == upg.K_DOWN:
                vy = 1
        if eventtype.type == upg.KEYUP:
            if eventtype.key == upg.K_RIGHT:
                vx = 0
            if eventtype.key == upg.K_LEFT:
                vx = 0
            if eventtype.key == upg.K_UP:
                vy = 0
            if eventtype.key == upg.K_DOWN:
                vy = 0

    tilemap.draw(0, 0)

    for i in range(1,200):
        x2 = random.getrandbits(6) + 20
        y2 = random.getrandbits(6) + 5
        screen_sf.blit(hero_sf, x2, y2)

    x = x + vx
    y = y + vy
    screen_sf.blit(hero_sf, x, y)

    upg.display.flip()
