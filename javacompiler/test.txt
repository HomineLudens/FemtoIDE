
> jokitto@1.0.0 test /home/fmanga/Projects/Pokitto/Jokitto/compiler
> node index.js test.java

compilationUnit
  ordinaryCompilationUnit
    packageDeclaration
      Package:package
      Identifier:lol
      Identifier:bob
      Identifier:yo
      Dot:.
      Dot:.
      Semicolon:;
    importDeclaration
      Import:import
      packageOrTypeName
        Identifier:pizza
        Identifier:cheese
        Identifier:Bacon
        Dot:.
        Dot:.
      Semicolon:;
    importDeclaration
      Import:import
      packageOrTypeName
        Identifier:apple
        Identifier:Crumble
        Dot:.
      Semicolon:;
    importDeclaration
      Import:import
      packageOrTypeName
        Identifier:cinnamon
      Dot:.
      Star:*
      Semicolon:;
    typeDeclaration
      classDeclaration
        classModifier
          Public:public
        normalClassDeclaration
          Class:class
          typeIdentifier
            Identifier:HelloWorldExample
          classBody
            LCurly:{
            classBodyDeclaration
              classMemberDeclaration
                methodDeclaration
                  methodModifier
                    Public:public
                  methodModifier
                    Static:static
                  methodHeader
                    result
                      Void:void
                    methodDeclarator
                      Identifier:main
                      LBrace:(
                      formalParameterList
                        formalParameter
                          variableParaRegularParameter
                            unannType
                              unannReferenceType
                                unannClassOrInterfaceType
                                  unannClassType
                                    Identifier:String
                            variableDeclaratorId
                              Identifier:args
                              dims
                                LSquare:[
                                RSquare:]
                      RBrace:)
                  methodBody
                    block
                      LCurly:{
                      blockStatements
                        blockStatement
                          statement
                            statementWithoutTrailingSubstatement
                              expressionStatement
                                statementExpression
                                  expression
                                    ternaryExpression
                                      binaryExpression
                                        unaryExpression
                                          primary
                                            primaryPrefix
                                              fqnOrRefType
                                                fqnOrRefTypePart
                                                  $methodTypeArguments
                                                  Identifier:System
                                                  $classTypeArguments
                                                fqnOrRefTypePart
                                                  $methodTypeArguments
                                                  Identifier:out
                                                  $classTypeArguments
                                                fqnOrRefTypePart
                                                  $methodTypeArguments
                                                  Identifier:println
                                                  $classTypeArguments
                                                Dot:.
                                                Dot:.
                                            primarySuffix
                                              methodInvocationSuffix
                                                LBrace:(
                                                argumentList
                                                  expression
                                                    ternaryExpression
                                                      binaryExpression
                                                        unaryExpression
                                                          primary
                                                            primaryPrefix
                                                              literal
                                                                StringLiteral:"Hello World !"
                                                RBrace:)
                                Semicolon:;
                      RCurly:}
            RCurly:}
